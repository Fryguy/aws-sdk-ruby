{{#generated_src_warning}}
{{generated_src_warning}}
{{/generated_src_warning}}
module {{module_name}}
  module EventStream
    {{#eventstreams}}
    class {{class_name}}

      def initialize(options)
        @data = options.fetch(:data)
      end

      {{#types}}
      def on_{{.}}_event(&block)
        on_event(:{{.}}, Proc.new)
      end

      {{/types}}
      def on_error_event(&block)
        on_event(:error, Proc.new)
      end

      private

      def on_event(type, callback)
        callback.call(@data) if @data.event_type == type
      end

    end
    {{/eventstreams}}

  end
end

